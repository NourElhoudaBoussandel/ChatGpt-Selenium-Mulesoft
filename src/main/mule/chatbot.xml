<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
	xmlns:java="http://www.mulesoft.org/schema/mule/java"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd 
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd"
>
	
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="fdf4607a-c5c7-45d8-9ce8-d8448e34d309" >
		<http:listener-connection host="0.0.0.0" port="8082" />
	</http:listener-config>
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="5f1a8b7a-059d-4549-827e-d8da740be63e" >
		<http:request-connection host="localhost" port="8081" />
	</http:request-config>
	<flow name="client" doc:id="b47710fd-8c14-4a7a-991f-020ce730d86f">
<http:listener doc:name="Listener" config-ref="HTTP_Listener_config" path="/test">
            
			<http:response statusCode="200" reasonPhrase="OK">
                <http:headers><![CDATA[#[{
                        'Access-Control-Allow-Origin': 'http://localhost:3000',
                        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',
                        'Access-Control-Allow-Headers': 'Content-Type, Authorization',
                        'Access-Control-Allow-Credentials': 'true'
                    }]]]>
                </http:headers>
            </http:response>
        </http:listener>
          <logger level="INFO" doc:name="Logger" doc:id="663f639e-0f32-42f0-9ff8-da30b7e4ef47" message="#[payload]"/>
		<choice doc:name="Check if message exists">
        <when expression="#[payload != '']">
            <!-- Si le champ "message" existe, poursuivre le traitement -->
            <set-variable variableName="incomingMessage" value="#[payload.message]" doc:name="Message"/>
            <logger level="INFO" doc:name="Logger" doc:id="ddf853e8-ea29-4d96-800f-a3baf7b1f6ed" message="#[vars.incomingMessage]"/>
            <!-- Le reste de votre logique de traitement ici -->
				<set-variable value="#[payload.history]" doc:name="historique" doc:id="89d9f43d-b296-490c-a629-f38095420566" variableName="historique"/>
				<logger level="INFO" doc:name="Logger" doc:id="130d36c2-def2-46ce-8003-2c0f2752e1ce" />
        
</when>
        <otherwise>
            <!-- Si le champ "message" est absent, renvoyer une réponse d'erreur -->
            <set-payload value="#[{'error': 'Message field is missing'}]" mimeType="application/json" doc:name="Set Payload"/>
        </otherwise>
    </choice>
		<http:request method="POST" doc:name="Request Completion APi" doc:id="077a1263-8267-4a10-8e5b-2bd81ed90403" config-ref="HTTP_Request_configuration" path="/completionApi"/>
	</flow>
	<!-- [STUDIO:"classification"]<flow name="classification" doc:id="fd63a9a5-64a4-45dc-be02-9fc62c812b00" >
		<ee:transform doc:name="Transform Message" doc:id="243d7f77-5658-4bdb-8b70-e29c06c035a1" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
	"model": "ft:gpt-3.5-turbo-0125:personal::9O9yTgZV",
	"messages": [
		{
			"role": "system",
			"content": "Tu dois répondre avec 1, 2 comme suit :\n1. Si pour répondre au client, tu dois consulter les informations concernant un produit spécifique.\n2. Si pour répondre au client, tu dois vérifier le stock."
		},
		{
			"role": "user",
			"content": vars.incomingMessage as String
		}
	&#93;
}

&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="POST" doc:name="Request" doc:id="330be5bf-9ac2-4666-b47b-00ec9deeb7a6" config-ref="HTTP_Request_configuration" path="/completionApi"/>
		<choice doc:name="Choice" doc:id="c53a14ab-f09a-4fec-a157-f0d4dba32979" >
			<when expression="#[payload.reponse == '1'&#93;">
				<flow-ref doc:name="informations Product" doc:id="d45bc18b-cbe0-43a9-a6c2-2deb1138e456" name="InformationsProduit" targetValue="#[payload.reponse&#93;"/>
			</when>
			<when expression="#[payload.reponse == '2'&#93;">
				<flow-ref doc:name="verifstock" doc:id="6b52c878-c719-4478-9f18-8a70bdb31759" name="verifstock"/>
			</when>
			<otherwise>
				<ee:transform doc:name="Transform Message" doc:id="f4bb0626-154e-449a-a00e-15d678e9aa0e" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
	reponse : payload.reponse
}&#93;&#93;></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>	
</flow> [STUDIO] -->
	<!-- [STUDIO:"VerificationProduitExiste"]<flow name="VerificationProduitExiste" doc:id="9aba75bc-58a6-463e-8d30-b5431fefccb2" >
		<ee:transform doc:name="Transform Message" doc:id="0243aefb-cdc4-4ed6-b0a4-78c3f69cfc6c">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
	"model": "ft:gpt-3.5-turbo-0125:personal::9O9yTgZV",
	"messages": [{
		"role": "system",
		"content": "extrait seulement le nom de produit que le client cherche : " ++ (vars.messageClient as String)
	}
	&#93;
}&#93;&#93;></ee:set-payload>
					</ee:message>
				</ee:transform>
		<flow-ref doc:name="completionApi" doc:id="9866ab54-4c3c-4dd5-82e5-0e4d2f36805e" name="completionApi" />
		<set-variable value="#[payload.reponse&#93;" doc:name="searchTerm " doc:id="af68ffad-f5a0-411b-8a2e-90f7ebb080f2" variableName="searchTerm "/>
		<flow-ref doc:name="getProductInformationsWix" doc:id="762fdb27-2381-4442-a9eb-b00b47627536" name="getProductInformationsWix" />
		<ee:transform doc:name="produit existe ou non" doc:id="0f91aa24-6092-4532-ac74-147995ac7ec2">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var productName = vars.searchTerm as String
&#45;&#45;-
payload filter ( (product) -> 
           upper(product.name) contains upper(productName)  )&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow> [STUDIO] -->
	<!-- [STUDIO:"InformationsProduit"]<flow name="InformationsProduit" doc:id="9b11bed8-d3bc-4182-aa5c-327607672797" >
		<flow-ref doc:name="VerificationProduitExiste" doc:id="445e3312-42d8-4d0d-aff2-8ede561c92cf" name="VerificationProduitExiste"/>
		<choice doc:name="Choice" doc:id="9b4b4f55-7446-4922-8b1a-a31638ddf599" >
			
			<when expression="#[payload != [&#93;&#93;" >
				<set-variable value="#[payload.url&#93;" doc:name="url" doc:id="1750a27c-1a00-474c-882d-b3ee107d84f9" variableName="url"/>
				<logger level="INFO" doc:name="Logger" doc:id="a7d82d99-aa55-4e8b-afd1-67a0012c8b7c" message="#[vars.url&#93;"/>
				<ee:transform doc:name="Transform Message" doc:id="5dad251a-9fb0-442b-a525-602b047224cb">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
    "model": "ft:gpt-3.5-turbo-0125:personal::9O9yTgZV",
    "messages": [
        {
            "role": "system",
            "content": "tu dois répondre à toutes les questions de l'utilisateur concernant les produits que tu vends. tu dispose de ces informations concernant le produit recherché: " ++ write(payload, "application/json")
            ++ "tu dois formuler une phrase cohérente pour repondre le client concernant ce produit pour l'encourager à acheter. N'utilise pas le champ url de l'image. Tu dois tenir compte du contexte pour maintenir une discussion continu " ++ vars.messageHistory as String
        },
        {
            "role": "user",
            "content": vars.incomingMessage as String
            
        }
    &#93;
}
&#93;&#93;></ee:set-payload>
					</ee:message>
				</ee:transform>
				<flow-ref doc:name="Flow Reference" doc:id="e8dc3dee-0146-4c68-82a0-fe49403708b3" name="completionApi"/>
			
</when>
			<when expression="#[payload == [&#93;&#93;">
				<ee:transform doc:name="Transform Message" doc:id="67d65cca-57d2-4954-992d-3978084f0787" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
	reponse : "produit non trouvé"
}&#93;&#93;></ee:set-payload>
					</ee:message>
				</ee:transform>
			
</when>
			<otherwise>
				<ee:transform doc:name="Transform Message" doc:id="489b7cf5-8e3c-42b7-a275-fb0ae311fa59" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
	response : "produit non trouvé"
}&#93;&#93;></ee:set-payload>
					</ee:message>
				</ee:transform>

			</otherwise>
		
</choice>
	</flow> [STUDIO] -->
	
	<!-- [STUDIO:"fineTuning"]<flow name="fineTuning" doc:id="d3131dec-ecef-4ef0-b301-e8ca830248de">
		<http:listener doc:name="Listener" doc:id="99371dae-09f2-40fa-a0ce-816fce95f1fb" config-ref="HTTP_Listener_config" path="/test" />
		<file:read doc:name="Read" doc:id="5deeed12-ae18-4221-a561-30d6aa62222f" path="C:\Users\bouss\Desktop\data_final.jsonl" />
		<ee:transform doc:name="Transform Message" doc:id="0020121f-fd2e-4023-9b50-002c684cb056">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output multipart/form-data
&#45;&#45;-
{
    parts: {
        file: {
            headers: {
                "Content-Disposition": "form-data; name=\"file\"; filename=\"/C:/Users/bouss/Desktop/data_final.jsonl\"",
                "Content-Type": "application/octet-stream"
            },
            content: payload
        },
        purpose: {
            headers: {
                "Content-Disposition": "form-data; name=\"purpose\""
            },
            content: "fine-tune"
        }
    }
}
&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="POST" doc:name="Request" doc:id="7804bbb2-4efc-464d-924e-5a2dea530bf9" config-ref="HTTP_Request_configuration_open_ai" path="/v1/files">
			<http:headers><![CDATA[#[output application/java
&#45;&#45;-
{
	Authorization: ""
}&#93;&#93;&#93;></http:headers>
		</http:request>
		<logger level="INFO" doc:name="Logger" doc:id="7ed88657-9481-487b-ba42-bf46155c2cd0" message="#[payload&#93;"/>
		<set-variable value="#[payload.id&#93;" doc:name="Set Variable" doc:id="6742157c-7834-4120-bb45-cd517bfff94e" variableName="idFile"/>
		<logger level="INFO" doc:name="Logger" doc:id="ff494d1e-a70e-4b13-88c8-1942758d1d97" message="#[vars.id&#93;"/>
		<http:request method="POST" doc:name="Request" doc:id="1224ae65-b94e-41b5-b5a5-03677266dd51" config-ref="HTTP_Request_configuration_open_ai" path="/v1/fine_tuning/jobs">
			<http:body ><![CDATA[#[%dw 2.0
output application/json
&#45;&#45;-
{
     "training_file": vars.idFile,
      "model":"gpt-3.5-turbo-0125"
}&#93;&#93;&#93;></http:body>
			<http:headers><![CDATA[#[%dw 2.0
output application/json
&#45;&#45;-
{ "Content-Type" : "application/json" ,
	Authorization: ""
  }&#93;&#93;&#93;></http:headers>
		</http:request>
		<set-variable value="#[payload.fine_tuned_model&#93;" doc:name="Set Variable" doc:id="be4ae4a4-5273-426d-876e-b6d899825681" variableName="idModel"/>
		<flow-ref doc:name="Flow Reference" doc:id="c0fc6c62-f8a2-4297-89d6-00e392c975f4" name="verifstock"/>
	</flow> [STUDIO] -->
	
	<!-- [STUDIO:"verifstock"]<flow name="verifstock" doc:id="8256d0a4-b75b-4a6c-90ec-04e38dbf7c1a">
		<flow-ref doc:name="VerificationProduitExiste" doc:id="d253f656-7a12-4293-8b29-c5ef88aa5436" name="VerificationProduitExiste"/>
		<choice>
			<when expression="#[payload != [&#93;&#93;"> 
			<set-variable value="#[payload.id&#93;" doc:name="ProductId" doc:id="e7233b71-5cb6-4630-aa23-133ec5f6503a" variableName="Product" />
		<flow-ref doc:name="Flow Reference" doc:id="2c8302eb-094d-45e9-9dcf-52dc681b7406" name="getProductInformationsWix" />
		<ee:transform doc:name="verif les varients en Stock" doc:id="565dd112-27ab-4d17-816f-b98701149fda">
			<ee:message>
				<ee:set-payload><![CDATA[var productIdToCheck = vars.product

// Filtrer les produits avec l'ID spécifié
var product = payload.products filter ((item) -> item.id == productIdToCheck)

// Vérifier si le produit existe et extraire ses variants en stock
var variantsInStock = if (isEmpty(product)) [&#93; else product[0&#93;.productOptions.choices filter ($.inStock == true)
output application/json
&#45;&#45;-
{    
    "productId": productIdToCheck,
    "variantsInStock": variantsInStock
}&#93;&#93;></ee:set-payload>
			</ee:message>
			<ee:variables>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Si produit non en Stock Recommandation" doc:id="8b20ce4d-c5c0-4f9d-87bf-8434316ededc">
			<when expression="#[payload.variantsInStock != [&#93;&#93;">
				<ee:transform doc:name="Transform Message" doc:id="f0f61aef-3b75-4c74-90d7-0c1a6b41b3fd">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
    "model": "ft:gpt-3.5-turbo-0125:personal::9O9yTgZV",
    "messages": [
        {
            "role": "system",
            "content": "voici les varientes de produit disponibles" ++ payload.variantsInStock as String ++ " tu dois utiliser ce payload pour répondre le client. Tu dois tenir compte du contexte pour maintenir une discussion continu " ++ vars.messageHistory as String
        },
        {
            "role": "user",
            "content": vars.messageClient
            
        }
    &#93;
}
&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
				<flow-ref doc:name="Flow Reference" doc:id="435d7216-919e-4599-8036-dad202d10076" name="completionApi" />
			</when>
			<when expression="#[payload.variantsInStock == [&#93;&#93;" >
				<flow-ref doc:name="RecommandationProduitSimilaire" doc:id="7f82ffc4-4674-4045-9813-12de03fb4bbc" name="RecommandationProduitSimilaire"/>
			</when>
			<otherwise>
				<set-payload value="Produit non trouvé" doc:name="Set Payload" doc:id="f9fb4878-911d-4582-b099-9f98981040b0" />
			</otherwise>
		</choice>
		
		</when>
			<otherwise>
				<ee:transform doc:name="Transform Message" doc:id="b82eecb6-d135-4cb7-850d-5c1f2b6d13ee" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
	response : "produit non trouvé dans le stock "
}&#93;&#93;></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow> [STUDIO] -->
	<!-- [STUDIO:"RecommandationProduitSimilaire"]<flow name="RecommandationProduitSimilaire" doc:id="b7c5c169-938a-43cb-b033-cd227f2de3c6" >
		<flow-ref doc:name="Flow Reference" doc:id="6ce61cb4-4e63-44b8-b9e4-2f375f650fb6" name="Retrieve_access_token"/>
		<http:request method="GET" doc:name="Get Product" doc:id="da127a58-bf7b-4ba6-bf99-6e32a028186b" config-ref="HTTP_Request_configuration1" path="/stores-reader/v1/products/{id}">
			<http:headers ><![CDATA[#[output application/json 
&#45;&#45;-
{
	"Authorization" : vars.Access_token
}&#93;&#93;&#93;></http:headers>
			<http:uri-params ><![CDATA[#[output application/json
&#45;&#45;-
{ "id" : "$(vars.Product[0&#93;)"}&#93;&#93;&#93;></http:uri-params>
		</http:request>
		<set-variable value="#[payload.product.name&#93;" doc:name="ProductName" doc:id="1f0186b8-bce1-447e-a084-02ebd1b94887" variableName="ProductName"/>
		<flow-ref doc:name="Flow Reference" doc:id="eb656ed4-a143-4c3c-b8a1-09998f74d6e1" name="getProductInformationsWix" />
		<ee:transform doc:name="Transform Message" doc:id="f410a1d8-8462-4e17-97c8-0d7c0e12c14f">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
    "model": "ft:gpt-3.5-turbo-0125:personal::9O9yTgZV",
    "messages": [
        {
            "role": "system",
            "content": "ton rôle est de répondre à toutes les questions concernant votre gamme de produits. De plus, tu là pour vous recommander des produits similaires afin d'améliorer l'expérience d'achat.

les informations sur les produits actuellement disponibles que tu dispose sont : " ++ write(payload, "application/json") ++ ".

Et le produit que le client cherche est : " ++ (vars.ProductName) as String ++ " tu dois formuler un paragraphe cohérent pour convaincre le client par ce produit similaire si tu le trouve"
        }
    &#93;
}
&#93;&#93;></ee:set-payload>
					</ee:message>
				</ee:transform>
		<flow-ref doc:name="Flow Reference" doc:id="2c5c2ad0-5379-4d4d-ae37-dec1b54043eb" name="completionApi" />
	</flow> [STUDIO] -->
	<!-- [STUDIO:"promotion"]<flow name="promotion" doc:id="774992cd-437c-4c61-90cd-e7d01a7ebfb6" >
		<http:listener doc:name="Listener" doc:id="db3dc19c-dda2-4fd6-86b9-7f7e1ac3b3e1" config-ref="HTTP_Listener_config" path="/promo"/>
		<flow-ref doc:name="Retrieve_access_token" doc:id="4b1be7c1-0d9f-409a-974c-4a8587e41b0c" name="Retrieve_access_token"/>
		<http:request method="POST" doc:name="DiscountRules" doc:id="a290191e-9cd7-4a97-8616-658e24519a93" config-ref="HTTP_Request_configuration1" path="/ecom/v1/discount-rules/query">
			<http:body ><![CDATA[#[output application/json
&#45;&#45;-
{}&#93;&#93;&#93;></http:body>
			<http:headers ><![CDATA[#[output application/json 
&#45;&#45;-
{   
    "content-type" : "application/json",
    "Authorization" : vars.Access_token
}&#93;&#93;&#93;></http:headers>
		</http:request>
		<ee:transform doc:name="Filtrage promotion  expiré" doc:id="4ba0b7e9-60af-4020-94e2-a669a7ef6d2e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import * from dw::core::Dates

// Obtenir la date actuelle
var currentDate = now()

// Filtrer les données
&#45;&#45;-
payload.discountRules 
    filter (item) -> 
        item.activeTimeInfo.end != null and 
        (item.activeTimeInfo.end as DateTime {format: "yyyy-MM-dd'T'HH:mm:ssXXX"}) > currentDate
&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="affichage promotion non expiré" doc:id="39fe65dd-3217-4e9c-95e4-584cae097235" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import * from dw::core::Dates

&#45;&#45;-
payload
    map  {
        nom: $.name,
        offer: $.offer,
        debut: 
            $.activeTimeInfo.start as DateTime  {format: "yyyy-MM-dd'T'HH:mm:ssXXX"} ,
            
        fin: 
          $.activeTimeInfo.end as DateTime  {format: "yyyy-MM-dd'T'HH:mm:ssXXX"}
          
      }
          &#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow> [STUDIO] -->
	
	<!-- [STUDIO:"RecommandationParHistoriqueAchat"]<flow name="RecommandationParHistoriqueAchat" doc:id="87102ab5-8b0d-4231-a75b-c3c9cd408841" >
		<http:listener doc:name="Listener" doc:id="feb7dbc4-3ea6-4f54-837e-ca8e2a430a52" config-ref="HTTP_Listener_config" path="/historiqueAchat"/>
		<flow-ref doc:name="Flow Reference" doc:id="790bf209-ae77-45cb-b0a5-ec90d1f08347" name="Retrieve_access_token"/>
		<ee:transform doc:name="Transform Message" doc:id="f52f0f6e-755c-4484-9f0d-b54b5b770239" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
    "search": {
      "filter": {
        "paymentStatus": "PAID",
        "fulfillmentStatus": "FULFILLED",
        "buyerInfo.email" : "nourelhouda.boussandel@ensi-uma.tn"
      }
     
  }
  }&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
		<http:request method="POST" doc:name="produit achetés" doc:id="a5b2f47b-7202-4c99-a063-3c30f58778e0" config-ref="HTTP_Request_configuration1" path="/ecom/v1/orders/search">
			<http:headers ><![CDATA[#[output application/json 
&#45;&#45;-
{   
    "content-type" : "application/json",
    "Authorization" : vars.Access_token
}&#93;&#93;&#93;></http:headers>
		</http:request>
		<ee:transform doc:name="grouper par nom de produit" doc:id="7a98b990-4864-4796-a027-3df80dfb7c40" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var orders = payload.orders flatMap $.lineItems map {
	nomProduit: $.productName.original,
	quantity: $.quantity
}
&#45;&#45;-

 orders groupBy $.nomProduit&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="productCounts" doc:id="7a641c08-386b-4350-8585-abc34f84d065" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

&#45;&#45;-
payload pluck ((value, key) -> {
    name: key,
    total: value map ((item) -> item.quantity ) reduce ((acc, qty) -> acc + qty)
})&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="recommendedProduct" doc:id="5bf5505d-e316-4578-9403-c45ccebd920d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var maxProduct = payload reduce ((acc, item) -> 
    if ( item.total > acc.total ) item
    else acc )
&#45;&#45;-
maxProduct&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow> [STUDIO] -->
</mule>
